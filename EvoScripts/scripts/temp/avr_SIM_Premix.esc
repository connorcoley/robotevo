E2ABB86F
20140523_141927 Admin           
                                                                                                                                
Administrator                                                                                                                   
--{ RES }--
V;200
--{ CFG }--
999;219;32;
14;-1;-1;-1;-1;-1;-1;16;43;251;-1;-1;251;-1;-1;-1;141;-1;-1;-1;-1;-1;-1;104;-1;16;5;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;3;Trough 100ml;Trough 100ml;Trough 100ml;
998;1-VEL-ElutionBuffer;2-Vl Lysis Buffer;3-VEB Binding Buffer;
998;1;Tube Eppendorf 2mL 16 Pos;
998;Reactives;
998;1;Tube Eppendorf 3x 16 PosR;
998;Eluat;
998;0;
998;0;
998;1;Tube Eppendorf 3x 16 Pos;
998;Proben;
998;0;
998;0;
998;0;
998;3;;;Mag48 -from 96 Well DeepWell;
998;;;48PosMagnet;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;8;Washstation 2Grid Cleaner short;Washstation 2Grid Waste;Washstation 2Grid Cleaner long;Trough 100ml;Trough 100ml;Trough 100ml;Washstation 2Grid DiTi Waste;;
998;;;;4-VEW1 Wash Buffe;5-VEW2-WashBuffer;6-Waste;;;
998;0;
998;3;Trough 100ml;Trough 100ml;Trough 100ml;
998;7-EtOH80p;8-Unnused;9-Unnused;
998;3;DiTi 1000ul;DiTi 1000ul;DiTi 1000ul;
998;1000-1;1000-2;1000-3;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;1;
998;4;0;System;
998;0;
998;1;
996;0;0;
--{ RPG }--
Group("Initializations");
Variable(SampleNum,"6",1,"Number of samples (6)",1,1.000000,48.000000,0,2,1,1);
Variable(Proteinase_K_Vol,"20",1,"Proteinase K (20 킠)?",1,1.000000,30.000000,0,2,1,1);
Variable(ProtK_w,"16",1,"Proteinase K Vol in well (16):",1,1.000000,16.000000,0,2,1,1);
Variable(CarrierRNA,"4",1,"RNA carrier(4 킠,  revise-better in LysB?)",1,0.000000,15.000000,0,2,1,1);
Variable(CarrierRNA_w,"15",1,"Carrier RNA in well (15):",1,1.000000,16.000000,0,2,1,1);
Variable(preMixPK_cRNA,"y",1,"Premix Proteinase K and RNA carrier (y/n)?",0,1.000000,50.000000,1,2,1,1);
Variable(preMixPK_cRNA_w,"12",1,"Premix Proteinase K and RNA carrier in well (12):",1,1.000000,16.000000,0,2,1,1);
Variable(Mix_ex ,"8",1,"Pre-mix excess Volumen percent (8%):",1,0.000000,30.000000,0,2,1,1);
Variable(ICMS2,"20",1,"InternalControl MS2 (20 킠)",1,1.000000,50.000000,0,2,1,1);
Variable(ICMS2_w,"14",1,"InternalControl MS2 in well (14):",1,1.000000,16.000000,0,2,1,1);
Variable(ex," 1+  Mix_ex / 100",0,"Proteinase K Vol",0,1.000000,1000.000000,0,2,0,0);
GroupEnd();
Variable(Drop,"n",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,1,2,0,0);
Variable(LastReact,"0",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Group("ProtK React 0");
Variable(this,"LastReact",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Group("Actualize!");
Variable(ProtK,"this",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(ReactName[0],"ProtK",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,1,2,0,0);
Variable(ReactPos[~this~],"ProtK_w",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(ReactReplies[~this~],"1",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(ReactV1s[~this~],"Proteinase_K_Vol",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
GroupEnd();
Variable(ReactVol[~this~],"SampleNum * ReactV1s[~this~] * ex",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(LastReact,"LastReact+1",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
GroupEnd();
Group("IC_MS2 React 1");
Variable(this,"LastReact",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Group("Actualize!");
Variable(IC_MS2,"this",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(ReactName[1],"IC_MS2",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,1,2,0,0);
Variable(ReactPos[~this~],"ICMS2_w",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(ReactReplies[~this~],"1",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(ReactV1s[~this~],"CarrierRNA ",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
GroupEnd();
Variable(ReactVol[~this~],"SampleNum * ReactV1s[~this~] * ex",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(LastReact,"LastReact+1",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
GroupEnd();
Group("ProtK_IC_MS2 Premix React 2");
Variable(lastcomp,"0",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(this,"LastReact",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Group("Actualize!");
Variable(ProtK_IC_MS2,"this",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(ReactName[2],"ProtK_IC_MS2",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,1,2,0,0);
Variable(ReactPos[~this~],"preMixPK_cRNA_w",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(ReactReplies[~this~],"1",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(ReactComp[~this~][~lastcomp~],"ProtK",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(lastcomp,"lastcomp+1",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(ReactComp[~this~][~lastcomp~],"IC_MS2",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(lastcomp,"lastcomp+1",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
GroupEnd();
Variable(ReactNumComp[~this~],"lastcomp",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(ReactV1s[~this~],"0",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
BeginLoop("lastcomp","cmp");
Variable(ReactV1s[~this~],"ReactV1s[~this~]+ReactV1s[~LOOP_cmp -1 ~]",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
EndLoop();
Variable(ReactVol[~this~],"SampleNum * ReactV1s[~this~] * ex",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(LastReact,"LastReact+1",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
GroupEnd();
Comment("NucleoMag VET for up to 48 samples");
Comment("Mag act 48gr");
Group("Initializations");
Variable(Vol_pk,"SampleNum * Proteinase_K_Vol * ex",0,"Proteinase K Vol",0,1.000000,1000.000000,0,2,0,0);
Variable(Vol_cr,"SampleNum * CarrierRNA * ex",0,"Proteinase K Vol",0,1.000000,1000.000000,0,2,0,0);
Variable(isTRIzolSamples ,"n",1,"TRIzol lysed samples? ( y/n )",0,4.000000,48.000000,1,2,1,1);
Variable(preInactiveSampleFullMix,"n",1,"Pre Inactive Sample Full(y/n)? LysB, ProtK,RNA carrier, IC-MS2 ?",0,1.000000,50.000000,1,2,1,1);
Variable(preInactiveSample,"n",1,"Pre Inactive Sample only Lysis Buffer(y/n)? LysB",0,1.000000,50.000000,1,2,1,1);
Variable(Dispense_Lysis_Mix,"n",1,"Dispense Full Lysis Mix(y/n)? LysB,  ProtK,RNA carrier, IC-MS2 ?",0,1.000000,50.000000,1,2,1,1);
Variable(LysBufVL,"180",1,"Lysis Buffer VL (180 킠)?",1,50.000000,200.000000,0,2,1,1);
Variable(LysBufVL_r,"1",1,"Lysis Buffer in position (1):",1,1.000000,9.000000,0,2,1,1);
Variable(BindBufVEB,"600",1,"Binding Buffer VEB (600 킠)?",1,400.000000,800.000000,0,2,1,1);
Variable(BindBufVEB_r,"3",1,"Binding Buffer VEB in position (3):",1,1.000000,9.000000,0,2,1,1);
Variable(B_Beads,"20",1,"B-Beads (20 킠 )?",1,1.000000,50.000000,0,2,1,1);
Variable(B_Beads_w,"13",1,"B-Beads in well (1):",1,1.000000,16.000000,0,2,1,1);
Variable(B_Beads_Vp,"40",1,"B-Beads solid Volumen percent (40%):",1,5.000000,90.000000,0,2,1,1);
Variable(WashBufVEW1,"470",1,"Wash Buffer VEW1 (470 킠 )?",1,400.000000,900.000000,0,2,1,1);
Variable(WashBufVEW1_r,"4",1,"Wash Buffer VEW1 in position (4):",1,1.000000,9.000000,0,2,1,1);
Variable(WashBufVEW2,"470",1,"Wash Buffer VEW2 (470 킠 ) ?",1,400.000000,900.000000,0,2,1,1);
Variable(WashBufVEW2_r,"5",1,"Wash Buffer in position (5):",1,1.000000,9.000000,0,2,1,1);
Variable(EtHO80,"470",1,"Ethanol 80% (470 킠)?",1,400.000000,900.000000,0,2,1,1);
Variable(EtHO80_r,"7",1,"Ethanol 80 %  in position (7):",1,1.000000,9.000000,0,2,1,1);
Variable(ElutBufVEL,"100",1,"Elution Buffer VEL (100 킠 )?",1,40.000000,190.000000,0,2,1,1);
Variable(ElutBufVEL_r,"8",1,"Elution Buffer VEL  in position (8):",1,1.000000,9.000000,0,2,1,1);
Variable(Tip_tNum,"4",1,"Nummer of tips",1,1.000000,4.000000,0,2,1,1);
BeginLoop("Tip_tNum","tip");
IfThen("LOOP_tip",0,"1");
Variable(tip_m[~LOOP_tip~],"1",0,"Max Vol to aspire",0,1.000000,1000.000000,0,2,0,0);
Variable(tips_m[~LOOP_tip~],"1",0,"Max Vol to aspire",0,1.000000,1000.000000,0,2,0,0);
Else();
Variable(tip_m[~LOOP_tip~],"tip_m[~LOOP_tip - 1~] * 2",0,"Max Vol to aspire",0,1.000000,1000.000000,0,2,0,0);
Variable(tips_m[~LOOP_tip~],"tips_m[~LOOP_tip-1~] + tip_m[~LOOP_tip~]",0,"Max Vol to aspire",0,1.000000,1000.000000,0,2,0,0);
EndIf();
EndLoop();
Variable(Tip200_maxV,"193",1,"Max vol 200킠 tips",1,100.000000,193.000000,0,2,1,1);
IfThen("SampleNum",3,"Tip_tNum");
Variable(Tip_tNum,"SampleNum % Tip_tNum",0,"",0,1.000000,10.000000,0,2,0,0);
Else();
EndIf();
Variable(Tip1000_maxV,"950",1,"Max vol 1000킠 tips",1,700.000000,950.000000,0,2,1,1);
Variable(Disp_tCols,"6",1,"Nummer of columns",1,1.000000,6.000000,0,2,1,1);
Variable(Tips_tRacks,"3",1,"Nummer of 1000-tips racks",1,1.000000,3.000000,0,2,1,1);
Variable(Disp_tRows,"8",1,"Nummer of rows",1,1.000000,8.000000,0,2,1,1);
Variable(ReUseTip,"y",1,"Reuse Tips (y/n)? ",0,1.000000,1000.000000,1,2,1,0);
Variable(ReUsedTipBeg,"0",1,"First tip to reuse ",0,1.000000,1000.000000,0,2,1,1);
Variable(NextPos4ReUsedTip,"0",1,"Where will the next tip back?",0,1.000000,1000.000000,0,2,1,1);
Variable(Drop,"n",1,"Drop Tips at end (y/n)? ",0,1.000000,1000.000000,1,2,1,0);
Variable(NoDrops,"0",0,"Tip Mask not droped",0,1.000000,1000.000000,0,2,0,0);
Variable(AccumulatedVol,"0",0,"Vol to be removed",0,1.000000,50.000000,0,2,0,0);
UserPrompt("Buffer Position ~BindBufVEB_r~: >~SampleNum*BindBufVEB*ex/1000~ mL of  Binding Buffer VEBBuffer Position ~WashBufVEW1_r~: >~SampleNum*WashBufVEW1*ex/1000~ mL of Wash Buffer VEW1Buffer Position ~WashBufVEW2_r~: >~SampleNum*WashBufVEW2*ex/1000~ mL of Wash Buffer VEW2Buffer Position ~EtHO80_r~: >~SampleNum*EtHO80*ex/1000~ mL of 80% EtOH ",2,-1);
UserPrompt("Reactive Position ~B_Beads_w~: >~SampleNum*B_Beads*ex~ 킠 of B-BeadsBuffer Position ~ElutBufVEL_r~: >~SampleNum*ElutBufVEL*ex/1000~ mL of Elution Buffer VELRack Eluates: Place ~SampleNum~ clean epp tubes to colect the RNA. ",2,-1);
GroupEnd();
Group("Lysis");
Comment("--- LYSIS ---");
IfThen("isTRIzolSamples",0,"y");
Variable(SampleVol,"400",1,"Sample volumen?(킠)",1,50.000000,400.000000,0,2,1,0);
UserPrompt("Preload  TRIzol lysed samples tubes on te-mags with ~SampleVol~ 킠 of the aqueous phase",1,-1);
Variable(AccumulatedVol,"AccumulatedVol + SampleVol",0,"",0,50.000000,400.000000,0,2,0,0);
Else();
Variable(SampleVol,"200",1,"Sample volumen to use?(200 킠)",1,50.000000,200.000000,0,2,1,0);
UserPrompt("Place ~SampleNum~ clean epp tubes on te-mags.(In columns of ~Tip_tNum~ each)",1,-1);
IfThen("preMixPK_cRNA",0,"y");
Else();
EndIf();
IfThen("preMixPK_cRNA",0,"y");
Comment("          Premix Proteinase K and RNA carrier");
Variable(Drop,"n",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,1,2,0,0);
Variable(r," ProtK_IC_MS2 ",0,"",0,1.000000,10.000000,0,2,0,0);
Variable(cn,"ReactNumComp[~r~]",0,"",0,1.000000,10.000000,0,2,0,0);
UserPrompt("Reactive Position ~ReactPos[0]~: >~ReactVol[0]~ 킠 of Proteinase KReactive Position ~CarrierRNA_w~:  >~Vol_cr~ 킠 of Carrier RNAReactive Position ~preMixPK_cRNA_w~:  Empty eppendorf for ~Vol_pk+Vol_cr~ 킠 of the premix ",2,-1);
Variable(TIP_MASK,"tips_m[~cn~]",0,"",0,1.000000,10.000000,0,2,0,0);
GetDITI2(15,"DiTi 1000ul",0,0,10,70);
BeginLoop("cn","c");
Variable(TIP_MASK,"tip_m[~LOOP_c~]",0,"",0,1.000000,10.000000,0,2,0,0);
Variable(c,"ReactComp[~r~][~LOOP_c-1~]",0,"",0,1.000000,10.000000,0,2,0,0);
Variable(Vol2pip,"ReactVol[~c~] ",0,"",0,1.000000,10.000000,0,2,0,0);
Variable(Vol,"Vol2pip",0,"",0,1.000000,10.000000,0,2,0,0);
Comment("Cont pip comp");
IfThen("Vol",2,"Tip1000_maxV ");
Variable(Vol,"Tip1000_maxV ",0,"",0,1.000000,10.000000,0,2,0,0);
Else();
EndIf();
Variable(WELL_OFFSET,"ReactPos[~c~]-1",0,"",0,1.000000,10.000000,0,2,0,0);
Aspirate(15,"AVR-Water free DITi 1000","Vol","Vol","Vol","Vol",0,0,0,0,0,0,0,0,7,0,1,"0110?00",0,0);
Variable(WELL_OFFSET,"preMixPK_cRNA_w-1",0,"",0,1.000000,10.000000,0,2,0,0);
Dispense(15,">> AVR-Water free DITi 1000 <<	353","Vol ","Vol ","Vol ","Vol ",0,0,0,0,0,0,0,0,7,0,1,"0110?00",0,0);
Variable(WELL_OFFSET,"preMixPK_cRNA_w-1",0,"",0,1.000000,10.000000,0,2,0,0);
Variable(Vol2pip,"Vol2pip - Vol",0,"",0,1.000000,10.000000,0,2,0,0);
If("Vol2pip",2,"0","Cont pip comp");
EndLoop();
Variable(Vol,"ReactVol[~r~]*0.8",0,"",0,1.000000,10.000000,0,2,0,0);
IfThen("Vol",2,"Tip1000_maxV ");
Variable(Vol,"Tip1000_maxV ",0,"",0,1.000000,10.000000,0,2,0,0);
Else();
EndIf();
Mix(15,"AVR-Water free DITi 1000","Vol","Vol","Vol","Vol",0,0,0,0,0,0,0,0,7,0,1,"0110?00",3,0,0);
Variable(WELL_OFFSET,"0",0,"Max Vol to aspire",0,1.000000,1000.000000,0,2,0,0);
Variable(TIP_MASK,"tips_m[~cn~]",0,"",0,1.000000,10.000000,0,2,0,0);
IfThen("Drop",0,"y");
DropDITI(3,22,6,10,70,0);
Variable(NoDrops,"0",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Else();
Variable(NoDrops,"TIP_MASK",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
EndIf();
Else();
UserPrompt("Reactive Position ~ProtK_w~: >~SampleNum*Proteinase_K_Vol*ex~ 킠 of Proteinase KReactive Position ~CarrierRNA_w~:  >~SampleNum*CarrierRNA*ex~ 킠 of Carrier RNABuffer Position ~LysBufVL_r~: >~SampleNum*LysBufVL*ex/1000~ mL of Lysis BufferReactive Position ~ICMS2_w~: >~SampleNum*ICMS2*ex~ 킠 of Internal control MS2 -- REVISE !!",2,-1);
EndIf();
EndIf();
GroupEnd();
EndScript(0);
