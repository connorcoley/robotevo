D5BDB7BE
20140806_141951 Admin           
                                                                                                                                
Administrator                                                                                                                   
--{ RES }--
V;200
--{ CFG }--
999;219;32;
14;-1;-1;-1;-1;-1;-1;16;43;251;-1;-1;251;-1;-1;37;-1;-1;-1;-1;-1;-1;-1;104;-1;16;5;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;-1;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;3;Trough 100ml;Trough 100ml;Trough 100ml;
998;1-VEL-ElutionBuffer;2-Vl Lysis Buffer;3-VEB Binding Buffer;
998;1;Tube Eppendorf 2mL 16 Pos;
998;Reactives;
998;1;Tube Eppendorf 3x 16 PosR;
998;Eluat;
998;0;
998;0;
998;1;Tube Eppendorf 3x 16 Pos;
998;Proben;
998;0;
998;0;
998;2;Tube Eppendorf 48 Pos;Tube Eppendorf 48 Pos;
998;48 Pos Heat;48PosMagnet;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;8;Washstation 2Grid Cleaner short;Washstation 2Grid Waste;Washstation 2Grid Cleaner long;Trough 100ml;Trough 100ml;Trough 100ml;Washstation 2Grid DiTi Waste;;
998;;;;4-VEW1 Wash Buffe;5-VEW2-WashBuffer;6-Waste;;;
998;0;
998;3;Trough 100ml;Trough 100ml;Trough 100ml;
998;7-EtOH80p;8-Unnused;9-Unnused;
998;3;DiTi 1000ul;DiTi 1000ul;DiTi 1000ul;
998;1000-1;1000-2;1000-3;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;0;
998;2;
998;4;0;System;
998;0;0;Te-MagS portrait;
998;1;
998;37;Tube Eppendorf 48 Pos;
998;1;
998;1;
996;0;0;
--{ RPG }--
Group("MN VET RNA extr. protocol");
Variable(isTRIzolSamples ,"no",1,"TRIzol lysed samples? (1: yes; 0: no)",1,0.000000,1.000000,0,2,1,1);
Group("ProtK_10 React");
Variable(name,"Proteinase K",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,1,2,0,0);
Variable(Vol1sample,"20",1,"Proteinase K (20 킠)?",1,1.000000,30.000000,0,2,1,1);
Variable(Pos,"16",1,"Proteinase K Vol in well (16):",1,1.000000,16.000000,0,2,1,1);
Variable(Type,"reactive_",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(Replies,"1",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Group("Actualising");
Variable(ProtK_10,"10",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(React[10].name,"~name~",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,1,2,0,0);
Variable(this,"ProtK_10",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(React[~this~].V1s,"Vol1sample",0,"Proteinase K (20 킠)?",0,1.000000,30.000000,0,2,0,0);
Variable(React[~this~].Pos,"Pos",0,"Proteinase K Vol in well (16):",0,1.000000,16.000000,0,2,0,0);
Variable(React[~this~].Replies,"Replies",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(React[~this~].Type,"Type",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(React[~this~].Vol,"SampleNum * React[~this~].V1s * ex",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(NextReact,"this+1",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
GroupEnd();
GroupEnd();
Group("CarrierRNA_11 React");
Variable(name,"Carrier RNA",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,1,2,0,0);
Variable(Vol1sample,"4",1,"RNA carrier(4 킠,  revise-better in LysB?)",1,0.000000,15.000000,0,2,1,1);
Variable(Pos,"15",1,"Carrier RNA in well (15):",1,1.000000,16.000000,0,2,1,1);
Variable(Type,"reactive_",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(Replies ,"1",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Group("Actualising");
Variable(CarrierRNA_11,"11",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(React[11].name,"~name~",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,1,2,0,0);
Variable(this,"CarrierRNA_11",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(React[~this~].V1s,"Vol1sample",0,"Proteinase K (20 킠)?",0,1.000000,30.000000,0,2,0,0);
Variable(React[~this~].Pos,"Pos",0,"Proteinase K Vol in well (16):",0,1.000000,16.000000,0,2,0,0);
Variable(React[~this~].Replies,"Replies",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(React[~this~].Type,"Type",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(React[~this~].Vol,"SampleNum * React[~this~].V1s * ex",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(NextReact,"this+1",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
GroupEnd();
GroupEnd();
Group("pK_cRNA_12 Premix React ");
Variable(name,"ProtK+carrier RNA premix",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,1,2,0,0);
Variable(mix,"yes",1,"Premix Proteinase K and RNA carrier(1: yes; 0: no)?",1,0.000000,1.000000,0,2,1,1);
Variable(Pos,"12",1,"Premix Proteinase K and RNA carrier in well (12):",1,1.000000,16.000000,0,2,1,1);
Variable(Type,"reactive_",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(Replies,"1",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(pK_cRNA_12,"12",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(this,"pK_cRNA_12",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(lastcomp,"0",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(React[~this~].Comp[~lastcomp~],"ProtK_10",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(lastcomp,"lastcomp+1",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(React[~this~].Comp[~lastcomp~],"CarrierRNA_11",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(lastcomp,"lastcomp+1",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Group("Actualising");
Variable(React[12].name,"~name~",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,1,2,0,0);
Variable(React[~this~].Pos,"Pos",0,"Proteinase K Vol in well (16):",0,1.000000,16.000000,0,2,0,0);
Variable(React[~this~].Replies,"Replies",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(React[~this~].Type,"Type",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
IfThen("mix",0,"yes");
Variable(React[~this~].Premix,"yes",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Else();
IfThen("mix",0,"no");
Variable(React[~this~].Premix,"no",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Else();
UserPrompt("Error",2,-1);
EndIf();
EndIf();
Variable(React[~this~].Comp.Num,"lastcomp",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(React[~this~].V1s,"0",0,"Proteinase K (20 킠)?",0,1.000000,30.000000,0,2,0,0);
BeginLoop("lastcomp","cmp");
Variable(cmp,"React[~this~].Comp[~LOOP_cmp -1 ~]",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(React[~this~].V1s,"React[~this~].V1s+React[~cmp~].V1s",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
EndLoop();
Variable(React[~this~].Vol,"SampleNum * React[~this~].V1s * ex",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(NextReact,"this+1",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
GroupEnd();
GroupEnd();
Group("LysBufV_13 React");
Variable(name,"Lysis Buffer",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,1,2,0,0);
Variable(Vol1sample,"180",1,"Lysis Buffer VL (180 킠)?",1,50.000000,200.000000,0,2,1,1);
Variable(Pos,"1",1,"Lysis Buffer in position (1):",1,1.000000,9.000000,0,2,1,1);
Variable(Type,"buffer_",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(Replies ,"1",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Group("Actualising");
Variable(LysBufV_13,"13",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(React[13].name,"~name~",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,1,2,0,0);
Variable(this,"LysBufV_13",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(React[~this~].Pos,"Pos",0,"Proteinase K Vol in well (16):",0,1.000000,16.000000,0,2,0,0);
Variable(React[~this~].Replies,"Replies",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(React[~this~].Type,"Type",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(React[~this~].V1s,"Vol1sample",0,"Proteinase K (20 킠)?",0,1.000000,30.000000,0,2,0,0);
Variable(React[~this~].Vol,"SampleNum * React[~this~].V1s * ex",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
Variable(NextReact,"this+1",0,"Sample volumen to use?(200 킠)",0,50.000000,200.000000,0,2,0,0);
GroupEnd();
GroupEnd();
Variable(BindBufVEB,"600",1,"Binding Buffer VEB (600 킠)?",1,400.000000,800.000000,0,2,1,1);
Variable(BindBufVEB_r,"3",1,"Binding Buffer VEB in position (3):",1,1.000000,9.000000,0,2,1,1);
Variable(B_Beads,"20",1,"B-Beads (20 킠 )?",1,1.000000,50.000000,0,2,1,1);
Variable(B_Beads_w,"13",1,"B-Beads in well (13):",1,1.000000,16.000000,0,2,1,1);
Variable(B_Beads_Vp,"40",1,"B-Beads solid Volumen percent (40%):",1,5.000000,90.000000,0,2,1,1);
Variable(WashBufVEW1,"460",1,"Wash Buffer VEW1 (470 킠 )?",1,400.000000,900.000000,0,2,1,1);
Variable(WashBufVEW1_r,"4",1,"Wash Buffer VEW1 in position (4):",1,1.000000,9.000000,0,2,1,1);
Variable(WashBufVEW2,"460",1,"Wash Buffer VEW2 (470 킠 ) ?",1,400.000000,900.000000,0,2,1,1);
Variable(WashBufVEW2_r,"5",1,"Wash Buffer in position (5):",1,1.000000,9.000000,0,2,1,1);
Variable(EtHO80,"460",1,"Ethanol 80% (470 킠)?",1,400.000000,900.000000,0,2,1,1);
Variable(EtHO80_r,"7",1,"Ethanol 80 %  in position (7):",1,1.000000,9.000000,0,2,1,1);
UserPrompt("Buffer Position ~WashBufVEW1_r~: >~SampleNum*WashBufVEW1*ex/1000~ mL of Wash Buffer VEW1Buffer Position ~WashBufVEW2_r~: >~SampleNum*WashBufVEW2*ex/1000~ mL of Wash Buffer VEW2Buffer Position ~EtHO80_r~: >~SampleNum*EtHO80*ex/1000~ mL of 80% EtOH ",2,-1);
UserPrompt("Reactive Position ~B_Beads_w~: >~SampleNum*B_Beads*ex~ 킠 of B-Beads",2,-1);
GroupEnd();
